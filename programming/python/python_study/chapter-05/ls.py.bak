#!/usr/bin/env python3
import os, sys, collections, time 
import locale #required for the "n" in the file size number format
import optparse
import pprint

locale.setlocale(locale.LC_ALL, "")

#modified = False
#recursive = False

parser = optparse.OptionParser()
parser.add_option("-m", "--modified", action="store_true", dest="modified", default=False, help=("show last modified date/time [default: off]"))
parser.add_option("-o", "--order", dest="order", default="name", help=("order by ('name', 'n', 'modified', 'm', 'size', 's') [default: name]"))
parser.add_option("-r", "--recursive", action="store_true", dest="recursive", default=False, help=("recurse into subdirectories [default: off]"))
parser.add_option("-s", "--sizes", action="store_true", dest="sizes", default=False, help=("show sizes [default: off]"))
parser.add_option("-H", "--hidden", action="store_true", dest="hidden", default=False, help=("show hidden files [default: off]"))
#parser.set_defaults(order='name',modified=False,recursive=False) 
(opts, args) = parser.parse_args()
#pprint.pprint(parser.parse_args())
#print(opts)
#print(args) #directories
#print(opts.sizes)
if not args:
    args.append('.') #default to local directory

for dirs in args:
#    print(dirs)
    for root, dirs, files in os.walk(dirs):
        for filename in files:
            file_name = filename
            fullname = os.path.join(root,filename)
            filesize = os.path.getsize(fullname)
            modified = time.strftime("%Y-%m-%d %H:%M:%S",time.gmtime(os.path.getmtime(fullname)))
            if ((opts.modified & opts.sizes == True) or (opts.modified & opts.sizes == False)):
                # if both modified and sizes are false assume that the user didnt enter amn argument
                if file_name.startswith('.'):
                    pass 
                    if  opts.hidden: 
                        print("{0} {1:>12n} {2}".format(modified , filesize,fullname))
                else:
                   print("{0} {1:>12n} {2}".format(modified , filesize,fullname))
 
            elif ((opts.modified  == True) &  (opts.sizes == False)) :
                print("{0} {1}".format(modified,fullname))

            elif ((opts.modified == False) & (opts.sizes == True)):
                print("{0:>12n} {1}".format(filesize,fullname))
            
# print(usage)
